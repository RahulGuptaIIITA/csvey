<style type="text/css">
.survey-container {
    height: 100px;
}

.survey-div {
    display: flex;
    width: 60%;
    margin: auto;
    flex-direction: column;
    border-radius: 2px;
    background-color: #ffffff;
    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
    border: solid 1px #e7e7e7;
    flex: 1;
}

.question-choice-text {
    width: 100%;
}

.question-choice-text > input {
    border: 0;
    width: 95%;
    color: #263345;
    font-size: 12px;
    outline: none;
    margin-left: 10px;
}

.input-container > input:focus {
    border-bottom: 1.5px solid #263345;
}

.input-container > input::-webkit-input-placeholder {
    color: #263345;
}

.input-container > input:-moz-placeholder {
    color: #263345;
    opacity: 1;
}

.input-container > input::-moz-placeholder {
    color: #263345;
    opacity: 1;
}

.input-container > input:-ms-input-placeholder {
    color: #263345;
}

.input-container > input:focus::-webkit-input-placeholder {
    color: #e7e7e7;
}

.input-container > input:focus:-moz-placeholder {
    color: #e7e7e7;
    opacity: 1;
}

.input-container > input:focus::-moz-placeholder {
    color: #e7e7e7;
    opacity: 1;
}

.input-container > input:focus:-ms-input-placeholder {
    color: #e7e7e7;
}

.radio-choice-icon {
    width: 15px;
    height: 15px;
    border-radius: 100px;
    border: solid 1px #e7e7e7;
    display: inline-block;
    vertical-align: middle;
}

.choice-div {
    display: flex;
    align-items: center;
    margin-bottom: 10px;
}

.rating-star-div {
    display: inline-flex;
    text-align: center;
    flex: 1;
    margin-top: 30px;
}

.rating-question-div {
    width: 200px;
    display: flex;
}

.add-question-container {
    width: 100%;
    border-top: 1px solid #e7e7e7;
    height: 66px;
}

.add-question {
    background: url('{{asset('bundles/framework/images/add-question.png') }}') scroll no-repeat left center;
    padding: 2px 0px 2px 24px;
    font-size: 12px;
    font-weight: normal;
    color: #0dc9d4;
    margin-left: 3%;
}

.next-question {
    width: 150px;
}

.input-container > input {
    border: 0;
    outline: 0;
    background: transparent;
    border-bottom: 1px solid #e7e7e7;
    font-size: 17px;
    font-weight: normal;
    line-height: 1.05;
    color: #263345;
    padding: 0;
    padding-bottom: 4px;
    font-family: 'Museo Sans 500';
}

.main-container {
    border-radius: 2px;
    background-color: #ffffff;
    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.1);
    border: solid 1px #e7e7e7;
    display: flex;
}

.question-header-container .question-text {
    width: 73%;
}

.question-header-container .question-text > input {
    width: 98%;
}

.display-flex {
    display: flex;
}

.question-type-selector .drop-down-list {
    width: 180px;
    position: absolute;
    border-radius: 2px;
    background-color: #ffffff;
    box-shadow: 0 1px 2px 1px rgba(109, 109, 109, 0.2), 0 -1px 1px 0 rgba(0, 0, 0, 0.05);
    margin-top: 3px;
}

.drop-down-list .question-type-cell {
    height: 24px;
}

.drop-down-list .question-type-cell > div {
    padding: 0px 8px;
}

.drop-down-list .question-type-cell > p {
    font-size: 12px;
    display: flex;
    align-items: center;
    margin: 0;
}

.question-type-selector {
    width: 180px;
    margin-left: 50px;
}

.question-type-selector .selected-object-container {
    height: 28px;
    border: 1px solid #97a2a3;
    border-radius: 4px;
    background-color: #ffffff;
    cursor: pointer;
}

.question-type-selector .selected-object-container > div {
    padding: 0px 8px;
    margin-top: 2px;
}

.question-type-selector .selected-object-container > p {
    font-size: 12px;
    display: flex;
    margin: 0;
    align-items: center;
}

.question-type-cell:hover {
    cursor: pointer;
    background-color: #c8f4f7;
}

.question-editable {
    border-radius: 2px;
    background-color: #ffffff;
    box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.2), 0 0 4px 0 rgba(0, 0, 0, 0.2);
    border: solid 1px #e7e7e7;
    z-index: 1002;
}

.align-items-center {
    display: flex;
    align-items: center;
}

.section-bottom-container {
    width: 100%;
    border-top: 1px solid #e7e7e7;
    border-bottom: 1px solid #e7e7e7;
    height: 50px;
}

.section-bottom-container .add-question {
    background: url('add-question.png') scroll no-repeat left center;
    padding: 2px 0px 2px 24px;
    font-size: 12px;
    font-weight: normal;
    color: #0dc9d4;
    margin-left: 3%;
    text-decoration: none;
}
</style>
<html>
<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/restangular/1.3.1/restangular.min.js"></script>
<link rel="stylesheet" href="http://ajax.googleapis.com/ajax/libs/angular_material/1.0.0/angular-material.min.css">
<script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.4.8/angular.min.js"></script>
<script src="//cdn.muicss.com/mui-0.7.5/js/mui.min.js"></script>
<link href="//cdn.muicss.com/mui-0.7.5/css/mui.min.css" rel="stylesheet" type="text/css" />

<body>
    <div ng-app="mainApp" ng-controller="surveyController">
        <div class="mui-appbar" style="align-items: center;display: flex;justify-content: center;font-size: 20px;">
            Survey Builder
        </div>
        <div class="survey-div">
            <div style="margin-bottom:23px;margin-top:20px;padding-left:23px;padding-right:23px;" class="input-container">
                <input type="text" style="width:90%;" name="company_{{questionIndex}}" placeholder="Enter company" style="width:80%;" ng-required="true" ng-model="surveyJson.company" ng-style="campaignForm.questionText_{{questionIndex}}.$invalid && campaignForm.questionText_{{questionIndex}}.$touched && {'border-bottom':'1px solid #fc7979'}">
                <p class="error-container" ng-show="campaignForm.questionText_{{questionIndex}}.$error.required && campaignForm.questionText_{{questionIndex}}.$touched ">Please enter the question</p>
            </div>
            <div ng-repeat="(questionIndex,question) in surveyJson.surveys" ng-class="question.editable ? 'question-editable':''" style="padding:33px 23px" ng-click="showEditable(questionIndex)">
                <div class="display-flex question-header-container">
                    <div class="question-text input-container">
                        <input type="text" name="questionText_{{questionIndex}}" placeholder="Question" ng-required="true" ng-model="question.question" ng-style="campaignForm.questionText_{{questionIndex}}.$invalid && campaignForm.questionText_{{questionIndex}}.$touched && {'border-bottom':'1px solid #fc7979'}">
                        <p class="error-container" ng-show="campaignForm.questionText_{{questionIndex}}.$error.required && campaignForm.questionText_{{questionIndex}}.$touched ">Please enter the question</p>
                    </div>
                    <div class="question-type-selector">
                        <div class="selected-object-container display-flex" ng-click="question.dropDown = !question.dropDown">
                            <div style=" align-items: center;display: flex;"><img ng-src="{{question.type === 'rating' && 'ratings.png' || 'multiple-choice.png'}}"></div>
                            <p>{{question.type}}</p>
                        </div>
                        <div class="drop-down-list" ng-hide="question.dropDown">
                            {{type}}
                            <div class="display-flex question-type-cell" ng-repeat="type in questionTypes" ng-click="question.type=type;question.dropDown = !question.dropDown">
                                <div style="align-items: center;display: flex;"><img ng-src="{{type === 'rating' && 'ratings.png' || 'multiple-choice.png'}}"></div>
                                <p>{{type}}</p>
                            </div>
                        </div>
                    </div>
                </div>
                <div id="choice" ng-show="question.type==='multiple choice'">
                    <div class="choice-div" ng-repeat="(choiceId, choice) in question.options track by $index">
                        <div class="radio-choice-icon"></div>
                        <div class="question-choice-text input-container">
                            <input type="text" name="" id="question-choice_{{questionId}}_{{choiceId}}" ng-model="question.options[$index]" placeholder="Option {{choiceId+1}}" style="font-size:14px;" required>
                        </div>
                    </div>
                </div>
                <div id="rating" class="rating-question-div" ng-show="question.type==='rating'">
                    <div class="rating-star-div" ng-repeat="rating in [1,2,3,4,5]">
                        <div style="">
                            <img src="rating_star.png">
                            <p class="font-12-text">{{rating}} </p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="section-bottom-container align-items-center" style="" ng-if="nextVisible">
                <a class="add-question" href ng-click="question.editable=false;addQuestion();nextVisible=false;">Add question</a>
            </div>
            <div style="padding-left:23px; margin-top: 20px;">
                <button type="submit" class="mui-btn mui-btn--raised" ng-click="postSurvey()" style="width:150px;margin-bottom:50px;">Submit</button>
            </div>
        </div>
        </form>
    </div>
</body>
</body>

</html>
<script>
var mainApp = angular.module("mainApp", ['restangular']);

mainApp.controller('surveyController', ['$scope', 'surveyModel', function($scope, surveyModel) {

    $scope.questionTypes = ['multiple choice', 'rating'];
    $scope.nextVisible = true;

    function init() {
        $scope.surveyJson = {
            'company': '',
            'surveys': [],
        };

        var question = {
            'options': ['', '', '', ''],
            'type': 'multiple choice',
            'question': '',
            'editable': true,
            'dropDown': 'false'
        };
        $scope.surveyJson.surveys.push(question);
        //console.log($scope.surveyJson);
    }

    $scope.showEditable = function(questionIndex) {
        for (var i = 0; i < $scope.surveyJson.surveys.length; i++) {
            $scope.surveyJson.surveys[i].editable = false;
        }
        $scope.surveyJson.surveys[questionIndex].editable = true;
    }

    $scope.addQuestion = function() {
        var question = {
            'options': ['', '', '', ''],
            'type': 'multiple choice',
            'question': '',
            'editable': true,
            'dropDown': 'false'

        };
        $scope.surveyJson.surveys[0].editable = false;
        $scope.nextVisible = false;
        $scope.surveyJson.surveys.push(question);
    };
    $scope.postSurvey = function() {
        surveyModel.postSurvey($scope.surveyJson).then(function(success) {
            location.href = 'http://www.practo.local/index.html';
        });
    }

    init();

}]);

mainApp.factory('surveyModel', ['Restangular', function(Restangular) {
    var service = {
        postSurvey: postSurvey
    };

    var restangular = Restangular.withConfig(function(RestangularConfigurer) {});

    function postSurvey(payload) {
        return restangular.all('survey').post(payload);
    }

    return service;


}]);
</script>